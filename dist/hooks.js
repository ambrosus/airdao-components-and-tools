(()=>{"use strict";var e={733:(e,t,o)=>{o.d(t,{metamaskConnector:()=>l,walletconnectConnector:()=>p});var r=o(155),a=o(946),n=o(269);const c={30746:{name:"AirDAO Devnet",chainId:30746,code:"AMB",tokenSymbol:"AMB",tokenDenomination:18,explorerUrl:"https://devnet.airdao.io/explorer/",rpcUrl:"https://network.ambrosus-dev.io",rpcUrlWS:"wss://network.ambrosus-dev.io/ws"},22040:{name:"AirDAO Testnet",chainId:22040,code:"AMB",tokenSymbol:"AMB",tokenDenomination:18,explorerUrl:"https://testnet.airdao.io/explorer/",rpcUrl:"https://network.ambrosus-test.io",rpcUrlWS:"wss://network.ambrosus-test.io/ws"},16718:{name:"AirDAO Mainnet",chainId:16718,code:"AMB",tokenSymbol:"AMB",tokenDenomination:18,explorerUrl:"https://airdao.io/explorer/",rpcUrl:"https://network.ambrosus.io/",rpcUrlWS:"wss://network.ambrosus.io/ws"}},i=((e=process.env.REACT_APP_CHAIN_ID||16718)=>c[e])(),s=process.env.REACT_APP_WC_PROJECT_ID,[l,_]=(0,r.initializeConnector)((e=>new a.MetaMask({actions:e}))),[p,u]=(0,r.initializeConnector)((e=>new n.WalletConnect({actions:e,options:{projectId:s,chains:[i.chainId],showQrModal:!0,rpcMap:{[i.chainId]:i.rpcUrl}},defaultChainId:i.chainId})));o(476)},476:(e,t,o)=>{o(733)},155:e=>{e.exports=require("@web3-react/core")},946:e=>{e.exports=require("@web3-react/metamask")},269:e=>{e.exports=require("@web3-react/walletconnect-v2")},497:e=>{e.exports=require("react")}},t={};function __webpack_require__(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,__webpack_require__),a.exports}__webpack_require__.d=(e,t)=>{for(var o in t)__webpack_require__.o(t,o)&&!__webpack_require__.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{__webpack_require__.r(o),__webpack_require__.d(o,{useAuthorization:()=>hooks_useAuthorization,useAutoLogin:()=>hooks_useAutoLogin});var e=__webpack_require__(733),t=__webpack_require__(155);const{REACT_APP_CHAIN_ID:r}=process.env,hooks_useAuthorization=(o=e.metamaskConnector,a=e.walletconnectConnector)=>{const{connector:n}=(0,t.useWeb3React)();return{loginMetamask:()=>{const{ethereum:e}=window;return e&&e.isMetaMask?o.activate(+r).then((()=>{localStorage.setItem("wallet","metamask")})).catch((e=>console.log("metamask connection error",e))):window.open(`https://metamask.app.link/dapp/${window.location.hostname+window.location.pathname}`).focus()},loginWalletConnect:()=>{const e={...localStorage};localStorage.clear();for(const t in e)t.includes("wc@2")||localStorage.setItem(t,e[t]);return a.activate(+r).catch((e=>{console.log("walletconnect-v2 connection error",e)}))},logout:()=>{n?.deactivate?n.deactivate():n.resetState(),localStorage.removeItem("wallet")}}};var a=__webpack_require__(497);const hooks_useAutoLogin=(t=e.metamaskConnector)=>{const[o,r]=(0,a.useState)(!1);return(0,a.useEffect)((()=>{(async()=>{"metamask"===localStorage.getItem("wallet")&&t.connectEagerly().catch((e=>{console.log("metamask eager connection error",e)})),r(!0)})()}),[]),o},n=require("buffer");window.Buffer=window.Buffer||n.Buffer})(),module.exports=o})();