(()=>{"use strict";var e={733:(e,t,r)=>{r.d(t,{defaultInjectedConnector:()=>i,defaultWalletConnectConnector:()=>l});var o=r(3),n=r(330);const a={30746:{name:"AirDAO Devnet",chainId:30746,code:"AMB",tokenSymbol:"AMB",tokenDenomination:18,explorerUrl:"https://devnet.airdao.io/explorer/",rpcUrl:"https://network.ambrosus-dev.io",rpcUrlWS:"wss://network.ambrosus-dev.io/ws"},22040:{name:"AirDAO Testnet",chainId:22040,code:"AMB",tokenSymbol:"AMB",tokenDenomination:18,explorerUrl:"https://testnet.airdao.io/explorer/",rpcUrl:"https://network.ambrosus-test.io",rpcUrlWS:"wss://network.ambrosus-test.io/ws"},16718:{name:"AirDAO Mainnet",chainId:16718,code:"AMB",tokenSymbol:"AMB",tokenDenomination:18,explorerUrl:"https://airdao.io/explorer/",rpcUrl:"https://network.ambrosus.io/",rpcUrlWS:"wss://network.ambrosus.io/ws"}},c=((e=process.env.REACT_APP_CHAIN_ID||16718)=>a[e])(),i=new o.InjectedConnector({supportedChainIds:[+c.chainId]}),l=new n.WalletConnectConnector({rpc:{[+c.chainId]:c.rpcUrl},chainId:c.chainId,bridge:"https://bridge.walletconnect.org",pollingInterval:6e3,qrcode:!0,qrcodeModalOptions:{mobileLinks:["metamask","trustee"]}})},3:e=>{e.exports=require("@web3-react/injected-connector")},330:e=>{e.exports=require("@web3-react/walletconnect-connector")},497:e=>{e.exports=require("react")}},t={};function __webpack_require__(r){var o=t[r];if(void 0!==o)return o.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{__webpack_require__.r(r),__webpack_require__.d(r,{useAuthorization:()=>hooks_useAuthorization,useAutoLogin:()=>hooks_useAutoLogin});var e=__webpack_require__(733),t=__webpack_require__(497);const hooks_useAuthorization=(r,o=e.defaultInjectedConnector,n=e.defaultWalletConnectConnector)=>{const{activate:a,deactivate:c}=r,i=(0,t.useMemo)((()=>{if(void 0!==i)return i}),[]);return{loginMetamask:()=>{const{ethereum:e}=i;e&&e.isMetaMask?a(o).then((()=>{localStorage.setItem("wallet","metamask")})):i.open(`https://metamask.app.link/dapp/${i.location.hostname+i.location.pathname}`).focus()},loginWalletConnect:()=>{a(n).then((()=>{localStorage.setItem("wallet","walletconnect")}))},logout:()=>{localStorage.removeItem("wallet"),c()}}},hooks_useAutoLogin=(r,o=e.defaultInjectedConnector)=>{const{activate:n}=r,[a,c]=(0,t.useState)(!1);return(0,t.useEffect)((()=>{(async()=>{let e;const{ethereum:t}=e,r=await(t&&t._metamask&&t._metamask.isUnlocked());"metamask"===localStorage.getItem("wallet")&&r?n(o).then((()=>c(!0))):c(!0)})()}),[]),a},o=require("buffer");window.Buffer=window.Buffer||o.Buffer})(),module.exports=r})();